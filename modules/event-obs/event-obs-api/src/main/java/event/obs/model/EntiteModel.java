/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package event.obs.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Entite service. Represents a row in the &quot;OBS_Entite&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>event.obs.model.impl.EntiteModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>event.obs.model.impl.EntiteImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Entite
 * @generated
 */
@ProviderType
public interface EntiteModel
	extends BaseModel<Entite>, ShardedModel, StagedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a entite model instance should use the {@link Entite} interface instead.
	 */

	/**
	 * Returns the primary key of this entite.
	 *
	 * @return the primary key of this entite
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this entite.
	 *
	 * @param primaryKey the primary key of this entite
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this entite.
	 *
	 * @return the uuid of this entite
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this entite.
	 *
	 * @param uuid the uuid of this entite
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the id entite of this entite.
	 *
	 * @return the id entite of this entite
	 */
	public long getIdEntite();

	/**
	 * Sets the id entite of this entite.
	 *
	 * @param idEntite the id entite of this entite
	 */
	public void setIdEntite(long idEntite);

	/**
	 * Returns the group ID of this entite.
	 *
	 * @return the group ID of this entite
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this entite.
	 *
	 * @param groupId the group ID of this entite
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this entite.
	 *
	 * @return the company ID of this entite
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this entite.
	 *
	 * @param companyId the company ID of this entite
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this entite.
	 *
	 * @return the create date of this entite
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this entite.
	 *
	 * @param createDate the create date of this entite
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this entite.
	 *
	 * @return the modified date of this entite
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this entite.
	 *
	 * @param modifiedDate the modified date of this entite
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the libelle of this entite.
	 *
	 * @return the libelle of this entite
	 */
	@AutoEscape
	public String getLibelle();

	/**
	 * Sets the libelle of this entite.
	 *
	 * @param libelle the libelle of this entite
	 */
	public void setLibelle(String libelle);

	@Override
	public Entite cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}